name: CI

on:
  push:
    branches:
      - main
    tags: ['*']
    paths-ignore:
      - 'CITATION.bib'
      - 'LICENSE.md'
      - 'README.md'
      - '.zenodo.json'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/SpellCheck.yml'
      - '.github/workflows/TagBot.yml'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'CITATION.bib'
      - 'LICENSE.md'
      - 'README.md'
      - '.zenodo.json'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/SpellCheck.yml'
      - '.github/workflows/TagBot.yml'
      - 'docs/**'
  workflow_dispatch:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: ${{ matrix.os }} - Julia ${{ matrix.version }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
          - '1.9'
          - '1.10'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        exclude:
          # FIXME: Figure out why this crashes
          - os: windows-latest
            version: '1.8'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - run: julia -e 'using InteractiveUtils; versioninfo(verbose=true)'
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,examples
      - uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session for debugging
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && always() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
